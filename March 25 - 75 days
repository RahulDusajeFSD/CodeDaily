
206. Reverse Linked List


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        
        Stack<Integer> stack = new Stack<>();

       
        while(head!=null){
            stack.push(head.val);
            head=head.next;
        }
        
        if(stack.size() == 0)
        return null;

        ListNode answer = new ListNode(stack.pop());
        ListNode current = answer;

        while(stack.size()>0){
          
         current.next = new ListNode(stack.pop());
         current=current.next;
        }

        return answer;
    }
}
