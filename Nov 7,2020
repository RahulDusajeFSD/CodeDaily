Triplets makeup sum in an array

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		
		Scanner sc =new Scanner(System.in);
		
		int T=sc.nextInt();
		
		while(T-->0)
		{
		    
		    int N=sc.nextInt();
		    
		    int x =sc.nextInt();
		    
		    
		    int[] A=new int[N];
		    
		    for(int i=0;i<N;i++)
		    A[i] =sc.nextInt();
		    
		    HashSet<Integer> hs=new HashSet<>();
		    
		    boolean flag=false;
		    
		    for(int i=0;i<N-2;i++)
		    {
		        int curr_sum = x -A[i];
		        
		        for(int j=i+1;j<N;j++)
		        {
		           if(hs.contains(curr_sum-A[j]))
		           flag=true;
		           
		         
		           
		        }
		        
		          hs.add(A[i]);
		        
		        
		    }
		    
		    if(flag)
		    System.out.println(1);
		    
		    else
		    System.out.println(0);
		    
		    
		}
	}
}


Pair in an array

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		
		Scanner sc =new Scanner(System.in);
		
		int T=sc.nextInt();
		
		while(T-->0)
		{
		    
		    int N=sc.nextInt();
		    
		    int x =sc.nextInt();
		    
		    
		    int[] A=new int[N];
		    
		    for(int i=0;i<N;i++)
		    A[i] =sc.nextInt();
		    
		    HashSet<Integer> hs=new HashSet<>();
		    
		    boolean flag=false;
		    
		    for(int i=0;i<N-2;i++)
		    {
		        int curr_sum = x -A[i];
		        
		        for(int j=i+1;j<N;j++)
		        {
		           if(hs.contains(curr_sum-A[j]))
		           flag=true;
		           
		         
		           
		        }
		        
		          hs.add(A[i]);
		        
		        
		    }
		    
		    if(flag)
		    System.out.println(1);
		    
		    else
		    System.out.println(0);
		    
		    
		}
	}
}
