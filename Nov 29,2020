select sum(population) from city where countrycode='JPN' 
select max(population)-min(population) from city
select ceil(avg(salary)-avg(replace(salary,'0',''))) from employees

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        
        
        if(nums2.length==0 &&  nums1.length>1)
        {
            if(nums1.length%2!=0)
            {
                return (double)nums1[nums1.length/2];
            }
            
            if(nums1.length%2==0)
            {
                return ((double)nums1[nums1.length/2 -1] + (double)nums1[nums1.length/2])/2;
            }
        }
        
        
         if(nums1.length==0 &&  nums2.length>1)
        {
            if(nums2.length%2!=0)
            {
                return (double)nums2[nums2.length/2];
            }
            
            if(nums2.length%2==0)
            {
                return ((double)nums2[nums2.length/2 -1] + (double)nums2[nums2.length/2])/2;
            }
        }
        
        
            
            
            
        if(nums1.length==0 && nums2.length==1)
            return (double)nums2[0];
        
         if(nums2.length==0 && nums1.length>1)
            return (double)nums1[0];
        
        if(nums2.length==0 && nums1.length==1)
            return (double)nums1[0];
        
       ArrayList<Integer> ar=new ArrayList<>();
        
        for(int i=0;i<nums1.length;i++)
            ar.add(nums1[i]);
        
          
        for(int i=0;i<nums2.length;i++)
            ar.add(nums2[i]);
        
        Collections.sort(ar);
        int len =ar.size();
        
        if(len%2!=0)
        {
            return (double)ar.get(len/2);
        }
        
        if(ar.size()%2==0)
        {
            
            return ((double)ar.get(len/2 -1)+(double)ar.get(len/2))/2;
        }
        
        
        
        return 0.0;
        
    }
}

class Solution {
    public int[] sortedSquares(int[] A) {
        
     //   int[] A=new int[A.length];
        
        for(int i=0;i<A.length;i++)
        {
            A[i]=A[i]*A[i];
        }
        
        Arrays.sort(A);
        
        return A;
        
    }
}
